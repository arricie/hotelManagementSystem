//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(MVC_webapp.Models.MVC_HotelProject2Entities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetse5fc6b5c7d9afc232571c6e61e6a496ccdace2408911f0042b51b9db8e9d7df6))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetse5fc6b5c7d9afc232571c6e61e6a496ccdace2408911f0042b51b9db8e9d7df6 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "e5fc6b5c7d9afc232571c6e61e6a496ccdace2408911f0042b51b9db8e9d7df6"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Bills")
            {
                return GetView0();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.CheckIn")
            {
                return GetView1();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.CheckOut")
            {
                return GetView2();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Customers")
            {
                return GetView3();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Laundry")
            {
                return GetView4();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Order")
            {
                return GetView5();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.RentCar")
            {
                return GetView6();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Rooms")
            {
                return GetView7();
            }

            if (extentName == "MVC_HotelProject2Entities.Bills")
            {
                return GetView8();
            }

            if (extentName == "MVC_HotelProject2Entities.CheckIns")
            {
                return GetView9();
            }

            if (extentName == "MVC_HotelProject2Entities.CheckOuts")
            {
                return GetView10();
            }

            if (extentName == "MVC_HotelProject2Entities.Customers")
            {
                return GetView11();
            }

            if (extentName == "MVC_HotelProject2Entities.Laundries")
            {
                return GetView12();
            }

            if (extentName == "MVC_HotelProject2Entities.Orders")
            {
                return GetView13();
            }

            if (extentName == "MVC_HotelProject2Entities.RentCars")
            {
                return GetView14();
            }

            if (extentName == "MVC_HotelProject2Entities.Rooms")
            {
                return GetView15();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.sysdiagrams")
            {
                return GetView16();
            }

            if (extentName == "MVC_HotelProject2Entities.sysdiagrams")
            {
                return GetView17();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Users")
            {
                return GetView18();
            }

            if (extentName == "MVC_HotelProject2ModelStoreContainer.Messages")
            {
                return GetView19();
            }

            if (extentName == "MVC_HotelProject2Entities.Users")
            {
                return GetView20();
            }

            if (extentName == "MVC_HotelProject2Entities.Messages")
            {
                return GetView21();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Bills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Bills
        [MVC_HotelProject2Model.Store.Bills](T1.Bills_BillID, T1.Bills_NumOfReservedDays, T1.Bills_RoomNum, T1.Bills_Type, T1.Bills_RoomPrice, T1.Bills_LaundryPrice, T1.Bills_RentCarPrice, T1.Bills_TotalPrice, T1.Bills_name, T1.Bills_surname, T1.Bills_BillDate, T1.Bills_noadult, T1.Bills_nochild, T1.Bills_customerID)
    FROM (
        SELECT 
            T.BillID AS Bills_BillID, 
            T.NumOfReservedDays AS Bills_NumOfReservedDays, 
            T.RoomNum AS Bills_RoomNum, 
            T.Type AS Bills_Type, 
            T.RoomPrice AS Bills_RoomPrice, 
            T.LaundryPrice AS Bills_LaundryPrice, 
            T.RentCarPrice AS Bills_RentCarPrice, 
            T.TotalPrice AS Bills_TotalPrice, 
            T.name AS Bills_name, 
            T.surname AS Bills_surname, 
            T.BillDate AS Bills_BillDate, 
            T.noadult AS Bills_noadult, 
            T.nochild AS Bills_nochild, 
            T.customerID AS Bills_customerID, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Bills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.CheckIn.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CheckIn
        [MVC_HotelProject2Model.Store.CheckIn](T1.CheckIn_CheckInID, T1.CheckIn_CheckInDate, T1.CheckIn_NumOfReservedDays, T1.CheckIn_CustomerID, T1.CheckIn_RoomNum, T1.CheckIn_NoAdults, T1.CheckIn_NoChildren, T1.CheckIn_PassportNo, T1.CheckIn_checkoutstatus)
    FROM (
        SELECT 
            T.CheckInID AS CheckIn_CheckInID, 
            T.CheckInDate AS CheckIn_CheckInDate, 
            T.NumOfReservedDays AS CheckIn_NumOfReservedDays, 
            T.CustomerID AS CheckIn_CustomerID, 
            T.RoomNum AS CheckIn_RoomNum, 
            T.NoAdults AS CheckIn_NoAdults, 
            T.NoChildren AS CheckIn_NoChildren, 
            T.PassportNo AS CheckIn_PassportNo, 
            T.checkoutstatus AS CheckIn_checkoutstatus, 
            True AS _from0
        FROM MVC_HotelProject2Entities.CheckIns AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.CheckOut.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CheckOut
        [MVC_HotelProject2Model.Store.CheckOut](T1.CheckOut_CheckOutID, T1.CheckOut_CheckOutDate, T1.CheckOut_CheckInID, T1.CheckOut_RoomNum, T1.CheckOut_customerID, T1.CheckOut_noadults, T1.CheckOut_nochild, T1.CheckOut_passportnum)
    FROM (
        SELECT 
            T.CheckOutID AS CheckOut_CheckOutID, 
            T.CheckOutDate AS CheckOut_CheckOutDate, 
            T.CheckInID AS CheckOut_CheckInID, 
            T.RoomNum AS CheckOut_RoomNum, 
            T.customerID AS CheckOut_customerID, 
            T.noadults AS CheckOut_noadults, 
            T.nochild AS CheckOut_nochild, 
            T.passportnum AS CheckOut_passportnum, 
            True AS _from0
        FROM MVC_HotelProject2Entities.CheckOuts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [MVC_HotelProject2Model.Store.Customers](T1.Customers_CustomerID, T1.Customers_Name, T1.Customers_Surname, T1.Customers_Address, T1.Customers_Email, T1.Customers_Phone, T1.Customers_PassportNo, T1.Customers_Gender, T1.Customers_Country, T1.Customers_City, T1.Customers_BirthDate, T1.Customers_checkstatus)
    FROM (
        SELECT 
            T.CustomerID AS Customers_CustomerID, 
            T.Name AS Customers_Name, 
            T.Surname AS Customers_Surname, 
            T.Address AS Customers_Address, 
            T.Email AS Customers_Email, 
            T.Phone AS Customers_Phone, 
            T.PassportNo AS Customers_PassportNo, 
            T.Gender AS Customers_Gender, 
            T.Country AS Customers_Country, 
            T.City AS Customers_City, 
            T.BirthDate AS Customers_BirthDate, 
            T.checkstatus AS Customers_checkstatus, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Laundry.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Laundry
        [MVC_HotelProject2Model.Store.Laundry](T1.Laundry_LoundryID, T1.Laundry_ServiceID, T1.Laundry_ServiceName, T1.Laundry_ServiceInfo, T1.Laundry_Price)
    FROM (
        SELECT 
            T.LoundryID AS Laundry_LoundryID, 
            T.ServiceID AS Laundry_ServiceID, 
            T.ServiceName AS Laundry_ServiceName, 
            T.ServiceInfo AS Laundry_ServiceInfo, 
            T.Price AS Laundry_Price, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Laundries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Order.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Order
        [MVC_HotelProject2Model.Store.Order](T1.Order_OrderID, T1.Order_ServiceID, T1.Order_RoomNum, T1.Order_ServicePrice, T1.Order_FirstDay, T1.Order_LastDay, T1.Order_Quantity, T1.Order_OrderPrice, T1.Order_CarID, T1.Order_LoundryID)
    FROM (
        SELECT 
            T.OrderID AS Order_OrderID, 
            T.ServiceID AS Order_ServiceID, 
            T.RoomNum AS Order_RoomNum, 
            T.ServicePrice AS Order_ServicePrice, 
            T.FirstDay AS Order_FirstDay, 
            T.LastDay AS Order_LastDay, 
            T.Quantity AS Order_Quantity, 
            T.OrderPrice AS Order_OrderPrice, 
            T.CarID AS Order_CarID, 
            T.LoundryID AS Order_LoundryID, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Orders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.RentCar.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RentCar
        [MVC_HotelProject2Model.Store.RentCar](T1.RentCar_CarID, T1.RentCar_serviceID, T1.RentCar_CarBrand, T1.RentCar_CustomerID, T1.RentCar_Price)
    FROM (
        SELECT 
            T.CarID AS RentCar_CarID, 
            T.serviceID AS RentCar_serviceID, 
            T.CarBrand AS RentCar_CarBrand, 
            T.CustomerID AS RentCar_CustomerID, 
            T.Price AS RentCar_Price, 
            True AS _from0
        FROM MVC_HotelProject2Entities.RentCars AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Rooms.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Rooms
        [MVC_HotelProject2Model.Store.Rooms](T1.Rooms_RoomNum, T1.Rooms_RoomInfo, T1.Rooms_RoomStatus, T1.Rooms_Extra, T1.Rooms_Type, T1.Rooms_RoomPrice)
    FROM (
        SELECT 
            T.RoomNum AS Rooms_RoomNum, 
            T.RoomInfo AS Rooms_RoomInfo, 
            T.RoomStatus AS Rooms_RoomStatus, 
            T.Extra AS Rooms_Extra, 
            T.Type AS Rooms_Type, 
            T.RoomPrice AS Rooms_RoomPrice, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Rooms AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Bills.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Bills
        [MVC_HotelProject2Model.Bill](T1.Bill_BillID, T1.Bill_NumOfReservedDays, T1.Bill_RoomNum, T1.Bill_Type, T1.Bill_RoomPrice, T1.Bill_LaundryPrice, T1.Bill_RentCarPrice, T1.Bill_TotalPrice, T1.Bill_name, T1.Bill_surname, T1.Bill_BillDate, T1.Bill_noadult, T1.Bill_nochild, T1.Bill_customerID)
    FROM (
        SELECT 
            T.BillID AS Bill_BillID, 
            T.NumOfReservedDays AS Bill_NumOfReservedDays, 
            T.RoomNum AS Bill_RoomNum, 
            T.Type AS Bill_Type, 
            T.RoomPrice AS Bill_RoomPrice, 
            T.LaundryPrice AS Bill_LaundryPrice, 
            T.RentCarPrice AS Bill_RentCarPrice, 
            T.TotalPrice AS Bill_TotalPrice, 
            T.name AS Bill_name, 
            T.surname AS Bill_surname, 
            T.BillDate AS Bill_BillDate, 
            T.noadult AS Bill_noadult, 
            T.nochild AS Bill_nochild, 
            T.customerID AS Bill_customerID, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.Bills AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.CheckIns.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CheckIns
        [MVC_HotelProject2Model.CheckIn](T1.CheckIn_CheckInID, T1.CheckIn_CheckInDate, T1.CheckIn_NumOfReservedDays, T1.CheckIn_CustomerID, T1.CheckIn_RoomNum, T1.CheckIn_NoAdults, T1.CheckIn_NoChildren, T1.CheckIn_PassportNo, T1.CheckIn_checkoutstatus)
    FROM (
        SELECT 
            T.CheckInID AS CheckIn_CheckInID, 
            T.CheckInDate AS CheckIn_CheckInDate, 
            T.NumOfReservedDays AS CheckIn_NumOfReservedDays, 
            T.CustomerID AS CheckIn_CustomerID, 
            T.RoomNum AS CheckIn_RoomNum, 
            T.NoAdults AS CheckIn_NoAdults, 
            T.NoChildren AS CheckIn_NoChildren, 
            T.PassportNo AS CheckIn_PassportNo, 
            T.checkoutstatus AS CheckIn_checkoutstatus, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.CheckIn AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.CheckOuts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CheckOuts
        [MVC_HotelProject2Model.CheckOut](T1.CheckOut_CheckOutID, T1.CheckOut_CheckOutDate, T1.CheckOut_CheckInID, T1.CheckOut_RoomNum, T1.CheckOut_customerID, T1.CheckOut_noadults, T1.CheckOut_nochild, T1.CheckOut_passportnum)
    FROM (
        SELECT 
            T.CheckOutID AS CheckOut_CheckOutID, 
            T.CheckOutDate AS CheckOut_CheckOutDate, 
            T.CheckInID AS CheckOut_CheckInID, 
            T.RoomNum AS CheckOut_RoomNum, 
            T.customerID AS CheckOut_customerID, 
            T.noadults AS CheckOut_noadults, 
            T.nochild AS CheckOut_nochild, 
            T.passportnum AS CheckOut_passportnum, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.CheckOut AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [MVC_HotelProject2Model.Customer](T1.Customer_CustomerID, T1.Customer_Name, T1.Customer_Surname, T1.Customer_Address, T1.Customer_Email, T1.Customer_Phone, T1.Customer_PassportNo, T1.Customer_Gender, T1.Customer_Country, T1.Customer_City, T1.Customer_BirthDate, T1.Customer_checkstatus)
    FROM (
        SELECT 
            T.CustomerID AS Customer_CustomerID, 
            T.Name AS Customer_Name, 
            T.Surname AS Customer_Surname, 
            T.Address AS Customer_Address, 
            T.Email AS Customer_Email, 
            T.Phone AS Customer_Phone, 
            T.PassportNo AS Customer_PassportNo, 
            T.Gender AS Customer_Gender, 
            T.Country AS Customer_Country, 
            T.City AS Customer_City, 
            T.BirthDate AS Customer_BirthDate, 
            T.checkstatus AS Customer_checkstatus, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Laundries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Laundries
        [MVC_HotelProject2Model.Laundry](T1.Laundry_LoundryID, T1.Laundry_ServiceID, T1.Laundry_ServiceName, T1.Laundry_ServiceInfo, T1.Laundry_Price)
    FROM (
        SELECT 
            T.LoundryID AS Laundry_LoundryID, 
            T.ServiceID AS Laundry_ServiceID, 
            T.ServiceName AS Laundry_ServiceName, 
            T.ServiceInfo AS Laundry_ServiceInfo, 
            T.Price AS Laundry_Price, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.Laundry AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [MVC_HotelProject2Model.Order](T1.Order_OrderID, T1.Order_ServiceID, T1.Order_RoomNum, T1.Order_ServicePrice, T1.Order_FirstDay, T1.Order_LastDay, T1.Order_Quantity, T1.Order_OrderPrice, T1.Order_CarID, T1.Order_LoundryID)
    FROM (
        SELECT 
            T.OrderID AS Order_OrderID, 
            T.ServiceID AS Order_ServiceID, 
            T.RoomNum AS Order_RoomNum, 
            T.ServicePrice AS Order_ServicePrice, 
            T.FirstDay AS Order_FirstDay, 
            T.LastDay AS Order_LastDay, 
            T.Quantity AS Order_Quantity, 
            T.OrderPrice AS Order_OrderPrice, 
            T.CarID AS Order_CarID, 
            T.LoundryID AS Order_LoundryID, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.[Order] AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.RentCars.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RentCars
        [MVC_HotelProject2Model.RentCar](T1.RentCar_CarID, T1.RentCar_serviceID, T1.RentCar_CarBrand, T1.RentCar_CustomerID, T1.RentCar_Price)
    FROM (
        SELECT 
            T.CarID AS RentCar_CarID, 
            T.serviceID AS RentCar_serviceID, 
            T.CarBrand AS RentCar_CarBrand, 
            T.CustomerID AS RentCar_CustomerID, 
            T.Price AS RentCar_Price, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.RentCar AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Rooms.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Rooms
        [MVC_HotelProject2Model.Room](T1.Room_RoomNum, T1.Room_RoomInfo, T1.Room_RoomStatus, T1.Room_Extra, T1.Room_Type, T1.Room_RoomPrice)
    FROM (
        SELECT 
            T.RoomNum AS Room_RoomNum, 
            T.RoomInfo AS Room_RoomInfo, 
            T.RoomStatus AS Room_RoomStatus, 
            T.Extra AS Room_Extra, 
            T.Type AS Room_Type, 
            T.RoomPrice AS Room_RoomPrice, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.Rooms AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.sysdiagrams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing sysdiagrams
        [MVC_HotelProject2Model.Store.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM MVC_HotelProject2Entities.sysdiagrams AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.sysdiagrams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing sysdiagrams
        [MVC_HotelProject2Model.sysdiagram](T1.sysdiagram_name, T1.[sysdiagram.principal_id], T1.[sysdiagram.diagram_id], T1.sysdiagram_version, T1.sysdiagram_definition)
    FROM (
        SELECT 
            T.name AS sysdiagram_name, 
            T.principal_id AS [sysdiagram.principal_id], 
            T.diagram_id AS [sysdiagram.diagram_id], 
            T.version AS sysdiagram_version, 
            T.definition AS sysdiagram_definition, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.sysdiagrams AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [MVC_HotelProject2Model.Store.Users](T1.Users_ID, T1.Users_Name, T1.Users_Password, T1.Users_image, T1.Users_MemorizeQuestion, T1.Users_MemorizeAnswer)
    FROM (
        SELECT 
            T.ID AS Users_ID, 
            T.Name AS Users_Name, 
            T.Password AS Users_Password, 
            T.image AS Users_image, 
            T.MemorizeQuestion AS Users_MemorizeQuestion, 
            T.MemorizeAnswer AS Users_MemorizeAnswer, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2ModelStoreContainer.Messages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Messages
        [MVC_HotelProject2Model.Store.Messages](T1.[Messages.UserID_from], T1.[Messages.UserID_to], T1.Messages_message, T1.Messages_date)
    FROM (
        SELECT 
            T.UserID_from AS [Messages.UserID_from], 
            T.UserID_to AS [Messages.UserID_to], 
            T.message1 AS Messages_message, 
            T.date AS Messages_date, 
            True AS _from0
        FROM MVC_HotelProject2Entities.Messages AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [MVC_HotelProject2Model.User](T1.User_ID, T1.User_Name, T1.User_Password, T1.User_MemorizeQuestion, T1.User_MemorizeAnswer, T1.User_image)
    FROM (
        SELECT 
            T.ID AS User_ID, 
            T.Name AS User_Name, 
            T.Password AS User_Password, 
            T.MemorizeQuestion AS User_MemorizeQuestion, 
            T.MemorizeAnswer AS User_MemorizeAnswer, 
            T.image AS User_image, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MVC_HotelProject2Entities.Messages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Messages
        [MVC_HotelProject2Model.Message](T1.[Message.UserID_from], T1.[Message.UserID_to], T1.Message_message1, T1.Message_date)
    FROM (
        SELECT 
            T.UserID_from AS [Message.UserID_from], 
            T.UserID_to AS [Message.UserID_to], 
            T.message AS Message_message1, 
            T.date AS Message_date, 
            True AS _from0
        FROM MVC_HotelProject2ModelStoreContainer.Messages AS T
    ) AS T1");
        }
    }
}
